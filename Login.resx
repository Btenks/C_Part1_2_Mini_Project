<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>